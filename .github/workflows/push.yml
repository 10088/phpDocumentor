on: push
name: Qa workflow
jobs:
  composer:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: composer
      uses: docker://composer
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        args: install --no-interaction --prefer-dist --optimize-autoloader
    - name: composer-require-checker
      uses: docker://phpga/composer-require-checker-ga
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        args: check --config-file ./composer-require-config.json composer.json
    - uses: actions/upload-artifact@v1
      with:
        name: vendor-prod
        path: vendor
  phpunit:
    runs-on: ubuntu-latest
    needs: composer
    steps:
    - uses: actions/checkout@master
    - uses: actions/download-artifact@v1
      with:
        name: vendor-prod
        path: vendor
    - name: Setup PHP
      uses: shivammathur/setup-php@master
      with:
        php-version: '7.2'
        extension-csv: mbstring, intl
        ini-values-csv: memory_limit=2G, display_errors=On, error_reporting=-1
        coverage: xdebug
        pecl: false
    - name: 'Install PHPUnit 6'
      run: composer global require phpunit/phpunit ^6
    - name: Run PHPUnit
      run: $HOME/.composer/vendor/bin/phpunit
  codestyle:
    runs-on: ubuntu-latest
    needs: [composer, phpunit]
    steps:
    - uses: actions/checkout@master
    - uses: actions/download-artifact@v1
      with:
        name: vendor-prod
        path: vendor
    - name: Code style check
      uses: docker://oskarstark/phpcs-ga
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        args: -d memory_limit=1024M
  phpstan:
    runs-on: ubuntu-latest
    needs: [composer, phpunit]
    steps:
    - uses: actions/checkout@master
    - uses: actions/download-artifact@v1
      with:
        name: vendor-prod
        path: vendor
    - name: PHPStan
      uses: docker://phpdoc/phpstan-ga:master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        args: analyse src tests --level 3 --configuration phpstan.neon
